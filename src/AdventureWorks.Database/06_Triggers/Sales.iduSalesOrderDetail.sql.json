{
  "triggerName": "iduSalesOrderDetail",
  "schemaName": "Sales",
  "definition": "\r\nCREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] \r\nAFTER INSERT, DELETE, UPDATE AS \r\nBEGIN\r\n    DECLARE @Count int;\r\n\r\n    SET @Count = @@ROWCOUNT;\r\n    IF @Count = 0 \r\n        RETURN;\r\n\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- If inserting or updating these columns\r\n        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) \r\n        -- Insert record into TransactionHistory\r\n        BEGIN\r\n            INSERT INTO [Production].[TransactionHistory]\r\n                ([ProductID]\r\n                ,[ReferenceOrderID]\r\n                ,[ReferenceOrderLineID]\r\n                ,[TransactionType]\r\n                ,[TransactionDate]\r\n                ,[Quantity]\r\n                ,[ActualCost])\r\n            SELECT \r\n                inserted.[ProductID]\r\n                ,inserted.[SalesOrderID]\r\n                ,inserted.[SalesOrderDetailID]\r\n                ,'S'\r\n                ,GETDATE()\r\n                ,inserted.[OrderQty]\r\n                ,inserted.[UnitPrice]\r\n            FROM inserted \r\n                INNER JOIN [Sales].[SalesOrderHeader] \r\n                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];\r\n\r\n            UPDATE [Person].[Person] \r\n            SET [Demographics].modify('declare default element namespace \r\n                \u0022http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\u0022; \r\n                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \r\n                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (\u0022inserted.LineTotal\u0022)') \r\n            FROM inserted \r\n                INNER JOIN [Sales].[SalesOrderHeader] AS SOH\r\n                ON inserted.[SalesOrderID] = SOH.[SalesOrderID] \r\n                INNER JOIN [Sales].[Customer] AS C\r\n                ON SOH.[CustomerID] = C.[CustomerID]\r\n            WHERE C.[PersonID] = [Person].[Person].[BusinessEntityID];\r\n        END;\r\n\r\n        -- Update SubTotal in SalesOrderHeader record. Note that this causes the \r\n        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.\r\n        UPDATE [Sales].[SalesOrderHeader]\r\n        SET [Sales].[SalesOrderHeader].[SubTotal] = \r\n            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])\r\n                FROM [Sales].[SalesOrderDetail]\r\n                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])\r\n        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);\r\n\r\n        UPDATE [Person].[Person] \r\n        SET [Demographics].modify('declare default element namespace \r\n            \u0022http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\u0022; \r\n            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] \r\n            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(\u0022deleted.LineTotal\u0022)') \r\n        FROM deleted \r\n            INNER JOIN [Sales].[SalesOrderHeader] \r\n            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] \r\n            INNER JOIN [Sales].[Customer]\r\n            ON [Sales].[Customer].[CustomerID] = [Sales].[SalesOrderHeader].[CustomerID]\r\n        WHERE [Sales].[Customer].[PersonID] = [Person].[Person].[BusinessEntityID];\r\n    END TRY\r\n    BEGIN CATCH\r\n        EXECUTE [dbo].[uspPrintError];\r\n\r\n        -- Rollback any active or uncommittable transactions before\r\n        -- inserting information in the ErrorLog\r\n        IF @@TRANCOUNT > 0\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n        END\r\n\r\n        EXECUTE [dbo].[uspLogError];\r\n    END CATCH;\r\nEND;\r\n",
  "tableName": "SalesOrderDetail"
}